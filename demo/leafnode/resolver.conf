# Operator named RGPI
# Operator JWT changes each time a new operator signing key is generated
# Operator signing key can be used to let organizations sign accounts
# We should not let anyone manage account besides QUARA team at the moment
# But we might rotate signing key so JWT can change
operator: eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJqdGkiOiJFR09TWEtUWFRDSVhFTTdMNVNER05aNUFEWVNPNE5JQklOWU9aTTJCTk9NTko1WEJBVkJBIiwiaWF0IjoxNjUwNTU1NTk1LCJpc3MiOiJPQlU2VzZPNjM3UFFCNkJYV0VaN0E2MktHWVVYUkhPTksyWjYzRURSWEVJNk5KWkxLUTZQUTJMUyIsIm5hbWUiOiJSR1BJIiwic3ViIjoiT0JVNlc2TzYzN1BRQjZCWFdFWjdBNjJLR1lVWFJIT05LMlo2M0VEUlhFSTZOSlpMS1E2UFEyTFMiLCJuYXRzIjp7InNpZ25pbmdfa2V5cyI6WyJPQjU0RFdPVFlaUEpONlJFS1pSVUFLRDZKSEw0N1VaWEs1RFVMNzM2RDRYUlRBUFpNTE9XM1NYUSJdLCJ0eXBlIjoib3BlcmF0b3IiLCJ2ZXJzaW9uIjoyfX0.E7rxisKOHLJSFZJvxVgews-dIHv54jcv10_A3hWkuzByFLfirxytSpQFLKHU60u3ajFpIRWS7Qc_89ZJiKv-Aw

# System Account named SYS
# This is the public key of the system account. There is no reason for it to change over time.
system_account: ACJPI3DSZWW3H7XV7FF4IY4YSL4CIOU6YIRRDQV6RG77Y6B6M47TX7BR

# configuration of the nats based resolver
resolver {
    # The node will act as a full-resolver
    # See https://docs.nats.io/running-a-nats-service/configuration/securing_nats/auth_intro/jwt/resolver#full
    type: full
    # Directory in which the account jwt will be stored
    # Restarts the nats-server in order to reflect manual additions to the directory
    # Server does not need to be restarted when JWT are updated through NATS integration
    # To upload or update any generated account JWT without nsc, send it as a request to $SYS.REQ.CLAIMS.UPDATE.
    # Each participating full NATS based account resolver will respond with a message detailing success or failure.
    dir: './leaf-jwt'
    # In order to support jwt deletion, set to true
    # If the resolver type is full delete will rename the jwt.
    # This is to allow manual restoration in case of inadvertent deletion.
    # To restore a jwt, remove the added suffix .delete and restart or send a reload signal.
    # To free up storage you must manually delete files with the suffix .delete.
    allow_delete: true
    # Interval at which a nats-server with a nats based account resolver will compare
    # it's state with one random nats based account resolver in the cluster and if needed,
    # exchange jwt and converge on the same set of jwt.
    # Won't be used unless several instances of NATS server are deployed as a cluster
    interval: "2m"
    # If a server does not know a JWT used to authenticate a client, it will perform
    # a lookup request to other resolvers in order to verify if the account exists.
    # Timeout for lookup requests in case an account does not exist locally.
    timeout: "1.9s"
}


# Preload the nats based resolver with the system account jwt and QUARA jwt
# This is not necessary but avoids a bootstrapping system account + default account
# To populate the resolver with new accounts or update the QUARA account, it's necessary to
# prepare an NSC environment. (It's not really necessary, as the python application demonstrates, but it's easier)

# 0) initialize an NSC environment, populate it using jwt and keys:
#    - Import operator
#        nsc add operator -u operator/RGPI/jwt/operator.jwt
#        nsc import keys --dir operator/RGPI/keys
#    - Import SYS account
#        nsc import account --file account/SYS/jwt/SYS-account.jwt
#        nsc import keys --dir account/SYS/keys
#    - Import sys user
#        nsc import user --file user/sys/jwt/SYS-user.jwt
#        nsc import keys --dir user/sys/keys
#    - Import QUARA account (optional)
#        nsc import account --file account/QUARA/jwt/account.jwt
#        nsc import keys --dir account/QUARA/keys
# 
# 1) make sure that your operator has the account server URL pointing at your nats servers.
#    The url must start with: "nats://"
#    nsc edit operator --account-jwt-server-url nats://localhost:4222
# 2) push your accounts using: nsc push --all
#    The argument to push -u is optional if your account server url is set as described.
#    It's also possible to push a single account in case it's not desirable to update several other accounts.
# 3) to prune accounts use: nsc push --prune
#    In order to enable prune you must set above allow_delete to true
# Later changes to the system account take precedence over the system account jwt listed here.
resolver_preload: {
    # System account. There is no reason for public key to change but JWT might change over time.
    ACJPI3DSZWW3H7XV7FF4IY4YSL4CIOU6YIRRDQV6RG77Y6B6M47TX7BR: eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJqdGkiOiJYQVVHQzVQRFFTSUFQQTdITkpZNUhRQlQzSTZVUUZXSzVRTDJVTkJBMjZCTVhEUTdNUVdRIiwiaWF0IjoxNjUwNTU2MTE3LCJpc3MiOiJPQlU2VzZPNjM3UFFCNkJYV0VaN0E2MktHWVVYUkhPTksyWjYzRURSWEVJNk5KWkxLUTZQUTJMUyIsIm5hbWUiOiJTWVMiLCJzdWIiOiJBQ0pQSTNEU1pXVzNIN1hWN0ZGNElZNFlTTDRDSU9VNllJUlJEUVY2Ukc3N1k2QjZNNDdUWDdCUiIsIm5hdHMiOnsiZXhwb3J0cyI6W3sibmFtZSI6ImFjY291bnQtbW9uaXRvcmluZy1zdHJlYW1zIiwic3ViamVjdCI6IiRTWVMuQUNDT1VOVC4qLlx1MDAzZSIsInR5cGUiOiJzdHJlYW0iLCJhY2NvdW50X3Rva2VuX3Bvc2l0aW9uIjozLCJkZXNjcmlwdGlvbiI6IkFjY291bnQgc3BlY2lmaWMgbW9uaXRvcmluZyBzdHJlYW0iLCJpbmZvX3VybCI6Imh0dHBzOi8vZG9jcy5uYXRzLmlvL25hdHMtc2VydmVyL2NvbmZpZ3VyYXRpb24vc3lzX2FjY291bnRzIn0seyJuYW1lIjoiYWNjb3VudC1tb25pdG9yaW5nLXNlcnZpY2VzIiwic3ViamVjdCI6IiRTWVMuUkVRLkFDQ09VTlQuKi4qIiwidHlwZSI6InNlcnZpY2UiLCJyZXNwb25zZV90eXBlIjoiU3RyZWFtIiwiYWNjb3VudF90b2tlbl9wb3NpdGlvbiI6NCwiZGVzY3JpcHRpb24iOiJSZXF1ZXN0IGFjY291bnQgc3BlY2lmaWMgbW9uaXRvcmluZyBzZXJ2aWNlcyBmb3I6IFNVQlNaLCBDT05OWiwgTEVBRlosIEpTWiBhbmQgSU5GTyIsImluZm9fdXJsIjoiaHR0cHM6Ly9kb2NzLm5hdHMuaW8vbmF0cy1zZXJ2ZXIvY29uZmlndXJhdGlvbi9zeXNfYWNjb3VudHMifV0sImxpbWl0cyI6eyJzdWJzIjotMSwiZGF0YSI6LTEsInBheWxvYWQiOi0xLCJpbXBvcnRzIjotMSwiZXhwb3J0cyI6LTEsIndpbGRjYXJkcyI6dHJ1ZSwiY29ubiI6LTEsImxlYWYiOi0xfSwic2lnbmluZ19rZXlzIjpbIkFBTldMNVJPUUVCMjVNQjRLSjVPNFZXUFc3R0hJTVlTUE9FNUZUV1hNSFZBQ0RTS1FOVUQzRkpIIl0sImRlZmF1bHRfcGVybWlzc2lvbnMiOnsicHViIjp7fSwic3ViIjp7fX0sInR5cGUiOiJhY2NvdW50IiwidmVyc2lvbiI6Mn19.1OGyUQdI6NM5skZehb25xdy6YChTvHxZQhZYVkDljCUIpVdL4tc3w9R-ku8ZieX_pMdRju3X7AcrfOI8QkPZCw,
    # QUARA account. There is no reason for public key to change, but JWT might change over time.
    ACLXO7K66J6VZQHBYJIN7RRKC436UZSYORAINSJK73EU7ENER6O2S2S4: eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJqdGkiOiJPWU1UWkU0U1VNTTZVU1E0SVQ2SVkyUEFTR1RSVkVKSTZUMjRCTFlURjdWQktNUlVQTEhRIiwiaWF0IjoxNjUwNTU3OTg2LCJpc3MiOiJPQjU0RFdPVFlaUEpONlJFS1pSVUFLRDZKSEw0N1VaWEs1RFVMNzM2RDRYUlRBUFpNTE9XM1NYUSIsIm5hbWUiOiJRVUFSQSIsInN1YiI6IkFDTFhPN0s2Nko2VlpRSEJZSklON1JSS0M0MzZVWlNZT1JBSU5TSks3M0VVN0VORVI2TzJTMlM0IiwibmF0cyI6eyJsaW1pdHMiOnsic3VicyI6LTEsImRhdGEiOi0xLCJwYXlsb2FkIjotMSwiaW1wb3J0cyI6LTEsImV4cG9ydHMiOi0xLCJ3aWxkY2FyZHMiOnRydWUsImNvbm4iOi0xLCJsZWFmIjotMSwiZGlza19zdG9yYWdlIjoxMDAwMDAwMDAwMH0sInNpZ25pbmdfa2V5cyI6WyJBQjJTVzZOU0pRWVQyWlpRTEtITkpBNVdGVzM3TU5PTlFKTTNRS0g0SlU0RUpTNkQ3UExNQ1pGViJdLCJkZWZhdWx0X3Blcm1pc3Npb25zIjp7InB1YiI6e30sInN1YiI6e319LCJ0eXBlIjoiYWNjb3VudCIsInZlcnNpb24iOjJ9fQ.fduVBhtKhhjON6IBZEr5jREAK0bSZH7sxTjPXfnsVkMMIRDHJU8X4SYgYPVqrjtJnOAptXH2BotKVwwoXGCaAA,
    # Kautex account
    ACDDWLAIXJTTUDQIGU3SWN54CECNOJG3IR5I5WIFC2Y4BOTCLTON7Z5N: eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJqdGkiOiJHQlhEM1Q0U0lDVVlKT1hYSkVHR0s2SUtXTU9KTE02R0RQRUtHRUxUSFQ0RE4zMzZPQUVBIiwiaWF0IjoxNjUwNTY2ODUxLCJpc3MiOiJPQlU2VzZPNjM3UFFCNkJYV0VaN0E2MktHWVVYUkhPTksyWjYzRURSWEVJNk5KWkxLUTZQUTJMUyIsIm5hbWUiOiJLQVVURVgiLCJzdWIiOiJBQ0REV0xBSVhKVFRVRFFJR1UzU1dONTRDRUNOT0pHM0lSNUk1V0lGQzJZNEJPVENMVE9ON1o1TiIsIm5hdHMiOnsibGltaXRzIjp7InN1YnMiOi0xLCJkYXRhIjotMSwicGF5bG9hZCI6LTEsImltcG9ydHMiOi0xLCJleHBvcnRzIjotMSwid2lsZGNhcmRzIjp0cnVlLCJjb25uIjotMSwibGVhZiI6LTF9LCJkZWZhdWx0X3Blcm1pc3Npb25zIjp7InB1YiI6e30sInN1YiI6e319LCJ0eXBlIjoiYWNjb3VudCIsInZlcnNpb24iOjJ9fQ.aFKinfc20HA1DsA7ErLAgDwLXXR0hu06ZPSemTOwEH05_6EtGH7AgAIhwCn9ii-tqqNGfD7VRfBzVQ7x8El7AA,
}
# Alternatively it's possible to update account JWT using NATS istelf
# Example:
#   - We assume that account id <ACCOUNT_ID> is: ACLXO7K66J6VZQHBYJIN7RRKC436UZSYORAINSJK73EU7ENER6O2S2S4
#   - We assume that encoded JWT <JWT> contains update: eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJqdGkiOiJXNVNLREJEWEpISzdKSTJLMzZTQ000RUo3QTNFQUlHUkdSQjJYV0pKM09WV1pTQk1GTEZRIiwiaWF0IjoxNjUwNTYxODQzLCJpc3MiOiJPQjU0RFdPVFlaUEpONlJFS1pSVUFLRDZKSEw0N1VaWEs1RFVMNzM2RDRYUlRBUFpNTE9XM1NYUSIsIm5hbWUiOiJRVUFSQSIsInN1YiI6IkFDTFhPN0s2Nko2VlpRSEJZSklON1JSS0M0MzZVWlNZT1JBSU5TSks3M0VVN0VORVI2TzJTMlM0IiwibmF0cyI6eyJsaW1pdHMiOnsic3VicyI6LTEsImRhdGEiOi0xLCJwYXlsb2FkIjoxMDAwMDAwMDAwLCJpbXBvcnRzIjotMSwiZXhwb3J0cyI6LTEsIndpbGRjYXJkcyI6dHJ1ZSwiY29ubiI6LTEsImxlYWYiOi0xLCJkaXNrX3N0b3JhZ2UiOjEwMDAwMDAwMDAwfSwic2lnbmluZ19rZXlzIjpbIkFCMlNXNk5TSlFZVDJaWlFMS0hOSkE1V0ZXMzdNTk9OUUpNM1FLSDRKVTRFSlM2RDdQTE1DWkZWIl0sImRlZmF1bHRfcGVybWlzc2lvbnMiOnsicHViIjp7fSwic3ViIjp7fX0sInR5cGUiOiJhY2NvdW50IiwidmVyc2lvbiI6Mn19.nRUoVVSgQO-Ny6YxWbc4HbAB221gljvrfC4T2SyZPskDn49q8_TelfzRE1fXJzNlevfXp9MhsBApuqhL0EaiDg 
#   - We assume that encoded JWT <JWT> is valid
#   - We assume that some credential file exists <CREDS> and is configured with proper permissions to act as system account
# Simply perform a request:
#   - In bash:
#       export ACCOUNT_ID="ACLXO7K66J6VZQHBYJIN7RRKC436UZSYORAINSJK73EU7ENER6O2S2S4"
#       export ENCODED_JWT="eyJ0eXAiOiJKV1QiLCJhbGciOiJlZDI1NTE5LW5rZXkifQ.eyJqdGkiOiJXNVNLREJEWEpISzdKSTJLMzZTQ000RUo3QTNFQUlHUkdSQjJYV0pKM09WV1pTQk1GTEZRIiwiaWF0IjoxNjUwNTYxODQzLCJpc3MiOiJPQjU0RFdPVFlaUEpONlJFS1pSVUFLRDZKSEw0N1VaWEs1RFVMNzM2RDRYUlRBUFpNTE9XM1NYUSIsIm5hbWUiOiJRVUFSQSIsInN1YiI6IkFDTFhPN0s2Nko2VlpRSEJZSklON1JSS0M0MzZVWlNZT1JBSU5TSks3M0VVN0VORVI2TzJTMlM0IiwibmF0cyI6eyJsaW1pdHMiOnsic3VicyI6LTEsImRhdGEiOi0xLCJwYXlsb2FkIjoxMDAwMDAwMDAwLCJpbXBvcnRzIjotMSwiZXhwb3J0cyI6LTEsIndpbGRjYXJkcyI6dHJ1ZSwiY29ubiI6LTEsImxlYWYiOi0xLCJkaXNrX3N0b3JhZ2UiOjEwMDAwMDAwMDAwfSwic2lnbmluZ19rZXlzIjpbIkFCMlNXNk5TSlFZVDJaWlFMS0hOSkE1V0ZXMzdNTk9OUUpNM1FLSDRKVTRFSlM2RDdQTE1DWkZWIl0sImRlZmF1bHRfcGVybWlzc2lvbnMiOnsicHViIjp7fSwic3ViIjp7fX0sInR5cGUiOiJhY2NvdW50IiwidmVyc2lvbiI6Mn19.nRUoVVSgQO-Ny6YxWbc4HbAB221gljvrfC4T2SyZPskDn49q8_TelfzRE1fXJzNlevfXp9MhsBApuqhL0EaiDg"
#       export CREDS_FILE="/tmp/sys-account.creds"
#       nats req "\$SYS.REQ.ACCOUNT.${ACCOUNT_ID}.CLAIMS.UPDATE" "${ENCODED_JWT}" --creds "${CREDS_FILE}"
#     You  should see a result like:
#     {"data":{"account":"ACLXO7K66J6VZQHBYJIN7RRKC436UZSYORAINSJK73EU7ENER6O2S2S4","code":200,"message":"jwt updated"},"server":{"name":"demo-server","host":"0.0.0.0","id":"NDGAZD4XZFBE22LHZN3VX25SUZ7GV6ELCBITN6GYNWS2YNEANMLCYKCN","domain":"demo","ver":"2.6.4","seq":53,"jetstream":true,"time":"2022-04-21T17:50:35.4542686Z"}}
# Note that an Operator signing key is required in order to sign an account JWT.
# 